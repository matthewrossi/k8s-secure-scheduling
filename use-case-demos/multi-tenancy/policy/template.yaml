apiVersion: templates.gatekeeper.sh/v1
kind: ConstraintTemplate
metadata:
  name: k8srequirenodeselectorsequalto
  annotations:
    metadata.gatekeeper.sh/title: "Required Node Selector Equal To"
    metadata.gatekeeper.sh/version: 1.0.1
    description: >-
      Requires pods to contain nodeSelector key-value pairs.
spec:
  crd:
    spec:
      names:
        kind: K8sRequireNodeSelectorsEqualTo
      validation:
        openAPIV3Schema:
          type: object
          properties:
            nodeSelectors:
              description: List of required nodeSelectors.
              type: array
              items:
                description: The required nodeSelector.
                type: object
                properties:
                  key:
                    description: The required nodeSelector key.
                    type: string
                  value:
                    description: The required nodeSelector value.
                    type: string
  targets:
    - target: admission.k8s.gatekeeper.sh
      rego: |
        package k8srequirenodeselectorsequalto

        import future.keywords.contains
        import future.keywords.if
        import future.keywords.in

        # missing node selector
        violation contains {"msg": msg} if {
          required := {nodeSelector.key | some nodeSelector in input.parameters.nodeSelectors}
          provided := {key | some key, _ in input.review.object.spec.nodeSelector}
          missing := required - provided
          count(missing) > 0

          podName := input.review.object.metadata.name
          msg := sprintf("pod <%v> does not specify the required nodeSelector keys <%v>", [podName, missing])
        }

        # wrong node selector value
        violation contains {"msg": msg} if {
          some nodeSelector in input.parameters.nodeSelectors
          required_value := nodeSelector.value
          provided_value := input.review.object.spec.nodeSelector[nodeSelector.key]
          provided_value != required_value

          podName := input.review.object.metadata.name
          msg := sprintf("pod <%v> has node selector <%v> set to a value different from <%v>", [podName, nodeSelector.key, required_value])
        }
