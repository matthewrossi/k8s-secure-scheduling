apiVersion: v1
kind: ServiceAccount
metadata:
  name: set-node-labels
  namespace: gatekeeper-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: set-node-labels
rules:
- apiGroups: [""] # "" indicates the core API group
  resources: ["nodes"]
  verbs: ["get", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: set-node-labels
  namespace: gatekeeper-system
subjects:
- kind: ServiceAccount
  name: set-node-labels
  namespace: gatekeeper-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: set-node-labels
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: set-worker-node-labels
  namespace: gatekeeper-system
spec:
  selector:
    matchLabels:
      name: set-worker-node-labels
  template:
    metadata:
      labels:
        name: set-worker-node-labels
    spec:
      containers:
      - name: kubectl
        image: bitnami/kubectl:1.30
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        command:
        - /bin/bash
        - -c
        - |
          set -e # make sure the job fails if any instruction fails

          # Set current node labels
          kubectl label ${node} uc1-tenant=true uc2-tenant=true --overwrite

          # Keep service alive
          while true
          do
            sleep infinity
          done
        resources:
          limits:
            cpu: 100m
            memory: 200Mi
          requests:
            cpu: 50m
            memory: 100Mi
        securityContext:
          privileged: false
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
      serviceAccountName: set-node-labels
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
