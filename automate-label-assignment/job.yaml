apiVersion: v1
kind: ServiceAccount
metadata:
  name: set-all-nodes-labels
  namespace: gatekeeper-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: set-all-nodes-labels
rules:
- apiGroups: [""] # "" indicates the core API group
  resources: ["nodes"]
  verbs: ["get", "list", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: set-all-nodes-labels
  namespace: gatekeeper-system
subjects:
- kind: ServiceAccount
  name: set-all-nodes-labels
  namespace: gatekeeper-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: set-all-nodes-labels
---
apiVersion: batch/v1
kind: Job
metadata:
  name: init-all-worker-nodes-labels
  namespace: gatekeeper-system
spec:
  backoffLimit: 5
  ttlSecondsAfterFinished: 60
  template:
    spec:
      containers:
      - name: kubectl
        image: bitnami/kubectl:1.30
        command:
        - /bin/bash
        - -c
        - |
          set -e # make sure the job fails if any instruction fails

          # Get nodes
          nodes=$(kubectl get nodes -o name)
          for node in ${nodes}
          do
            # Set node labels
            kubectl label ${node} uc1-tenant=true uc2-tenant=true --overwrite
          done
        resources:
          limits:
            cpu: 100m
            memory: 200Mi
          requests:
            cpu: 50m
            memory: 100Mi
        securityContext:
          privileged: false
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
      restartPolicy: Never
      serviceAccountName: set-all-nodes-labels
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
